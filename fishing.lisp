(defparameter *catch* (random 10))
(setq rod 15)
(defparameter *fishy* (random (+ rod 1)))
(defun tuna ()
  (format t "You caught a tuna!  ~%+2 raw fish meat ~%") (pushfish))
(defun shark ()
  (format t "Woah! You caught a shark! ~%+4 raw fish meat ~%") (pushfish) (pushfish))
(defun reset ()
  (setf *fishy* (random (+ rod 1))) (setf *catch* (random 13)))
(defun cast ()
  (if (equal (gethash 0 *fishingrod*) 0) (progn (format t "~%~%~%You cast the rod into the ocean... ~%")
    (loop 
        (progn 
          (setf *fishy* (random (+ rod 1))) (setf *catch* (random 13)) (format t ".") (sleep 1))
        (when (equal *fishy* rod)
            (return (format t "~%TYPE \"REEL\" TO CATCH THE fish! ~%")))))
    (format t "~%You do not have the fishing rod! ~%")))
(defun reel ()
    (cond ((< *catch* 8) (progn (tuna) (reset))
           (and (>= *catch* 8) (< *catch* 13)) (progn (shark) (reset)))))
